abs(df[,v$z] - v$z_value)
abs(df[,v$z] - v$z_value) %>% purrr::map_lgl(~.x == min(.x))
head(abs(df[[v$z]] - v$z_value))
dev <- abs(df[[v$z]] - v$z_value) %>% purrr::map_lgl(~.x == min(.))
dev
dev %>% purrr::map_lgl(~.x == min(dev))
min(dev)
dev
dev <- abs(df[[v$z]] - v$z_value)
dev %>% purrr::map_lgl(~.x == min(dev))
df %>% filter(dev %>% purrr::map_lgl(~.x == min(dev)))
df %>% group_by(condition) %>% filter(dev %>% purrr::map_lgl(~.x == min(dev)))
nearest_z <- function(df, v){
dev <- abs(df[[v$z]] - v$z_value)
dev %>% purrr::map_lgl(~.x == min(dev))
}
df %>% group_by(condition) %>% filter(nearest_z(v), v)
df %>% group_by(condition) %>% filter(nearest_z(v = v), v)
df %>% group_by(condition) %>% filter(nearest_z(., v = v), v)
df %>% group_by(condition) %>% filter(nearest_z(df, v = v), v)
nearest_z <- function(df, v){
dev <- abs(df[[v$z]] - v$z_value)
df %>% filter(dev %>% purrr::map_lgl(~.x == min(dev)))
}
df %>% group_by(condition) %>% nearest_z()
df %>% group_by(condition) %>% nearest_z(v = v)
df %>%
nearest_z(v = v)
df %>% group_by(condition) %>% map_df(~nearest_z(.x, v = v))
df %>% group_by(condition) %>% map_df(~nearest_z(.x, v = v))
df %>% group_by(condition)
dev <- abs(df[[v$z]] - v$z_value)
df %>% group_by(condition) %>%
filter(dev %>% purrr::map_lgl(~.x == min(dev)))
df %>% group_by(condition) %>%
filter(dev %>% purrr::map_lgl(~.x == min(dev)))
dev %>% purrr::map_lgl(~.x == min(dev))
df[[v$z]]
df %>% group_by(condition) %>%
map_df(~nearest_z(.x, v = v))
v
df %>% group_by(condition) %>%
map_df(~nearest_z(.x, v = v), v)
df %>% group_by(condition) %>%
map_df(~nearest_z(.x, v = v), v = v)
v
print(v$z)
nearest_z <- function(df, v){
print(v$z)
dev <- abs(df[[v$z]] - v$z_value)
df %>% filter(dev %>% purrr::map_lgl(~.x == min(dev)))
}
df %>% group_by(condition) %>%
map_df(~nearest_z(.x, v = v), v = v)
df %>% group_by(condition) %>%
map_df(~nearest_z(df = .x, v = v), v = v)
print(names(df))
nearest_z <- function(df, v){
print(v$z)
print(names(df))
print(df[[v$z]])
dev <- abs(df[[v$z]] - v$z_value)
df %>% filter(dev %>% purrr::map_lgl(~.x == min(dev)))
}
df %>% group_by(condition) %>%
map_df(~ nearest_z(df = .x, v = v), v = v)
nearest_z <- function(df, v){
print(v$z)
print(colnames(df))
print(df[[v$z]])
dev <- abs(df[[v$z]] - v$z_value)
df %>% filter(dev %>% purrr::map_lgl(~.x == min(dev)))
}
df %>% group_by(condition) %>%
map_df(~ nearest_z(df = .x, v = v), v = v)
print(df)
nearest_z <- function(df, v){
print(df)
print(v$z)
print(colnames(df))
print(df[[v$z]])
dev <- abs(df[[v$z]] - v$z_value)
df %>% filter(dev %>% purrr::map_lgl(~.x == min(dev)))
}
df %>% group_by(condition) %>%
map_df(~ nearest_z(df = .x, v = v), v = v)
m
df %>% split_by("condition") %>%
map_df(~ nearest_z(df = .x, v = v), v = v)
df %>% dlply("condition") %>%
map_df(~ nearest_z(df = .x, v = v), v = v)
df %>%  split("condition") %>%
map_df(~ nearest_z(df = .x, v = v), v = v)
df %>%  split("condition")
df %>%  split(df$condition) %>%
map_df(~ nearest_z(df = .x, v = v), v = v)
df %>%  split(df$condition)
df %>% ggplot(aes(x=effect_size)) +
geom_histogram()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point() + geom_jitter()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition, alpha = 0.5)) +
geom_point() + geom_jitter()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition) +
geom_point(alpha = 0.5)) + geom_jitter()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition) +
geom_point(alpha = 0.5)) + geom_jitter()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition) +
geom_point(alpha = 0.5))
df %>% ggplot(aes(x=effect_size, y = n, colour = condition) +
geom_point(alpha = 0.05))
geom_point()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition) +
df %>% ggplot(aes(x=effect_size, y = n, colour = condition) +
geom_point()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition) +
geom_point()
df %>% filter(( %>% abs %>% which.min)
get_choices <- reactive({
v$x_choices <- unique(df[[input$x]])
v$z_choices <- unique(df[[v$z]])
})
assertthat::assert_that(!unique(df$effect_size) %>% sort() %>% duplicated %>% any)
assertthat::assert_that(!unique(df$n) %>% sort() %>% duplicated %>% any)
df %>% ggplot(aes(x=power)) +
geom_bar()
df %>% ggplot(aes(x=effect_size)) +
geom_histogram()
df %>% ggplot(aes(x=n)) +
geom_histogram()
df %>% select(condition, effect_size, power) %>% spread(key = effect_size, power)
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha = 0.05))
df %>% filter(( %>% abs %>% which.min)
get_choices <- reactive({
v$x_choices <- unique(df[[input$x]])
v$z_choices <- unique(df[[v$z]])
})
assertthat::assert_that(!unique(df$effect_size) %>% sort() %>% duplicated %>% any)
assertthat::assert_that(!unique(df$n) %>% sort() %>% duplicated %>% any)
df %>% ggplot(aes(x=power)) +
geom_bar()
df %>% ggplot(aes(x=effect_size)) +
geom_histogram()
df %>% ggplot(aes(x=n)) +
geom_histogram()
df %>% select(condition, effect_size, power) %>% spread(key = effect_size, power)
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha = 0.05))
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha = 0.05)
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha = 0.5)
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha = 0.3)
df %>% ggplot(aes(x=effect_size, y = power, colour = condition)) +
geom_point(alpha = 0.3)
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha = 0.3)
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha = 0.3, size = 2)
alpha <- 0.3
size <- 3
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=effect_size, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
size <- 2.3
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=effect_size, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size) + geom_hex()
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha =alpha, size = size) + facet_grid()
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha =alpha, size = size) + facet_grid(condition)
df %>% ggplot(aes(x=effect_size, y = n, colour = condition)) +
geom_point(alpha =alpha, size = size) + facet_grid(~condition)
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha =alpha, size = size) + facet_grid(~condition)
library(viridis)
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha =alpha, size = size) + scale_color_viridis()
facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha =alpha, size = size) + scale_color_viridis()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
size <- 2.7
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
geom_jitter() +
facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
install.packages("ggExtra")
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red")
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red")
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw() +
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red")
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw() +
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red")
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw() +
ggExtra::ggMarginal(type = "density", margins = "y", size = 4, marginCol = "red")
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw() +
ggExtra::ggMarginal(type = "density", margins = "y", size = 4, marginCol = "red")
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
df %>% filter(( %>% abs %>% which.min)
get_choices <- reactive({
v$x_choices <- unique(df[[input$x]])
v$z_choices <- unique(df[[v$z]])
})
assertthat::assert_that(!unique(df$effect_size) %>% sort() %>% duplicated %>% any)
assertthat::assert_that(!unique(df$n) %>% sort() %>% duplicated %>% any)
df %>% ggplot(aes(x=power)) +
geom_bar()
df %>% ggplot(aes(x=effect_size)) +
geom_histogram()
df %>% ggplot(aes(x=n)) +
geom_histogram()
df %>% select(condition, effect_size, power) %>% spread(key = effect_size, power)
alpha <- 0.3
size <- 2.7
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red"))
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
facet_grid(~condition) + theme_bw()
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red")
#facet_grid(~condition) + theme_bw()
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red")
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
geom_point(alpha =alpha, size = size) + scale_color_viridis() #+
#facet_grid(~condition) + theme_bw()
ggExtra::ggMarginal(p, type = "density", margins = "y", size = 4, marginCol = "red")
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
ggExtra::ggMarginal(x=effect_size, y = n, type = "density",
margins = "y", size = 4, marginCol = "red") +
geom_point(alpha =alpha, size = size) + scale_color_viridis() #+
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
ggExtra::ggMarginal(data = df, x=effect_size, y = n, type = "density",
margins = "y", size = 4, marginCol = "red") +
geom_point(alpha =alpha, size = size) + scale_color_viridis() #+
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_jitter() +
ggExtra::ggMarginal(data = df, x=effect_size, y = n, type = "density",
margins = "y", size = 4, marginCol = "red") +
geom_point(alpha =alpha, size = size) + scale_color_viridis()
df
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
geom_jitter() +
ggExtra::ggMarginal(data = df, x=effect_size, y = n, type = "density",
margins = "y", size = 4, marginCol = "red") #+
alpha
df %>% ggplot(aes(x=effect_size, y = n, colour = power))
geom_point(alpha =alpha, size = size) + scale_color_viridis() +
geom_jitter()
alpha <- 0.3
size <- 2.7
df %>% ggplot(aes(x=effect_size, y = n, colour = power))
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter()
df %>% ggplot(aes(x=effect_size, y = n, colour = power))
geom_point(alpha = alpha, size = size) + scale_color_viridis()
df %>% ggplot(aes(x=effect_size, y = n, colour = power))
df %>% ggplot(aes(x=effect_size, y = n, colour = power))
geom_point(
)
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() +
ggExtra::ggMarginal(data = df, x=effect_size, y = n, type = "density",
margins = "y", size = 4, marginCol = "red") #+
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() +
ggExtra::ggMarginal(data = df, x="effect_size", y = "n", type = "density",
margins = "y", size = 4, marginCol = "red") #+
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() +
ggExtra::ggMarginal(data = df, x="effect_size", y = "n", type = "density",
margins = "y", size = 4, marginCol = "red")
library(ggExtra)
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() +
facet_grid(~condition) + theme_bw()
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter()
p <- ggExtra::ggMarginal(p, type = "density", margins = c("y", "x"), size = 4, marginCol = "red")
p <- ggExtra::ggMarginal(p, type = "density", margins = "both", size = 4, marginCol = "red")
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter()
p <- ggExtra::ggMarginal(p, type = "density", margins = "both", size = 4)
p
alpha <- 0.3
size <- 2.7
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter()
p <- ggExtra::ggMarginal(p, type = "density", margins = "both", size = 4)
p +
facet_grid(~condition) + theme_bw()
p <- df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter()
p <- ggExtra::ggMarginal(p, type = "density", margins = "both", size = 4)
p + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() + facet_grid(~condition) + theme_bw()
alpha <- 0.3
size <- 2.7
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=power)) +
geom_bar()
df %>% ggplot(aes(x=effect_size, fill = condition)) +
geom_histogram()
df %>% ggplot(aes(x=effect_size, fill = condition)) +
geom_density()
df %>% ggplot(aes(x=effect_size, fill = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=effect_size, fill = condition, colour = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=n, fill = condition, colour = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=n, fill = condition, colour = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=effect_size, fill = condition, colour = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=n, fill = condition, colour = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=n, fill = condition, colour = condition)) +
geom_density(alpha = alpha) + geom_jitter()
df %>% ggplot(aes(x=n, fill = condition, colour = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis()
df %>% ggplot(aes(x=effect_size, y = n, colour = power), alpha = alpha, size = size) +
geom_point() + scale_color_viridis() +
geom_jitter() + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power, alpha = alpha, size = size)) +
geom_point() + scale_color_viridis() +
geom_jitter() + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter() + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = 0.3, size = size) + scale_color_viridis() +
geom_jitter() + facet_grid(~condition) + theme_bw()
size <- 2.7
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size)
size <- 2.7
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter()
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter(alpha = alpha, size = size)
df %>% ggplot(aes(x=effect_size, y = n, colour = power)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter(alpha = alpha, size = size) + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha = alpha, size = size) + scale_color_viridis() +
geom_jitter(alpha = alpha, size = size) + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha = alpha, size = size) +
#scale_color_viridis() +
geom_jitter(alpha = alpha, size = size) + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=n, y = power, colour = effect_size)) +
geom_point(alpha = alpha, size = size) +
scale_color_viridis() +
geom_jitter(alpha = alpha, size = size) + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=power, fill = condition, colour = condition)) +
geom_density(alpha = alpha)
df %>% ggplot(aes(x=power, fill = condition, colour = condition)) +
geom_density(alpha = alpha) + coord_flip()
df %>% ggplot(aes(x=n, y = power, colour = effect_size)) +
geom_point(alpha = alpha, size = size) +
scale_color_viridis() +
geom_jitter(alpha = alpha, size = size) + facet_grid(~condition) + theme_bw()
df %>% ggplot(aes(x=n, y = power, colour = condition)) +
geom_point(alpha =alpha, size = size)
df %>% ggplot(aes(x=n, y = power, colour = effect_size)) +
geom_point(alpha = alpha, size = size) +
scale_color_viridis() +
geom_jitter(alpha = alpha, size = size) + facet_grid(~condition) + theme_bw()
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(ggthemes)
library(shiny)
library(pwr)
library(tidyverse)
library(plotly)
library(shinydashboard)
x_choices <- setNames(c("effect_size", "n"), c("effect size", "sample size"))
df <- read_csv("summary.csv") %>%
dplyr::rename(effect_size.drift = Drift_effect_size,
effect_size.accuracy = Acc_effect_size,
effect_size.reaction_time = RT_effect_size,
n = sample_size,
power.accuracy = Acsig,
power.reaction_time = RTsig,
power.drift = Drsig) %>%
gather(condition, value, -n, -X1) %>%
separate(condition, c("var", "condition"), sep = "_") %>%
spread(var, value) %>% select(-X1)
df <- read_csv("summary.csv") %>%
dplyr::rename(effect_size.drift = Drift_effect_size,
effect_size.accuracy = Acc_effect_size,
effect_size.reaction_time = RT_effect_size,
n = sample_size,
power.accuracy = Acsig,
power.reaction_time = RTsig,
power.drift = Drsig) %>%
gather(condition, value, -n, -X1) %>%
separate(condition, c("var", "condition"), sep = "\\.") %>%
spread(var, value) %>% select(-X1)
bins <- list(effect_size = unique(df$effect_size) %>% sort,
power = unique(df$power) %>% sort)
unique(df$n)
n_bins <- unique(df$n)
df %>% group_by(condition, n) %>% n()
df %>% group_by(condition, n) %>% count()
df %>% group_by(condition, n) %>% count() %>% distinct(nn)
df %>% group_by(condition, n) %>% count() %>% pull(nn) %>% distinct()
df %>% group_by(condition, n) %>% count() %>% pull(nn) %>% unique()
bins_effect_size <- df %>% group_by(condition, n) %>% count() %>% pull(nn) %>% unique()
bins_effect_size
assertthat::assert_that(length(bins_effect_size), 1)
assertthat::assert_that(length(bins_effect_size) == 1)
bins_n <- unique(df$n)
nbins_effect_size <- df %>% group_by(condition, n) %>% count() %>% pull(nn) %>% unique()
df %>% group_by(condition, n)
df %>% group_by(condition, n) %>% mutate(bin = order(effect_size))
df <- df %>% group_by(condition, n) %>% mutate(bin = order(effect_size))
df
use_r(server-utils)
use_r("server-utils")
use_data()
